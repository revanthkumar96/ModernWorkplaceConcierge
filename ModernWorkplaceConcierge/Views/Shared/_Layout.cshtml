<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->

@{
    var alerts = TempData.ContainsKey(ModernWorkplaceConcierge.Models.Alert.AlertKey) ?
        (List<ModernWorkplaceConcierge.Models.Alert>)TempData[ModernWorkplaceConcierge.Models.Alert.AlertKey] :
        new List<ModernWorkplaceConcierge.Models.Alert>();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Workplace Concierge</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/all.css"
          integrity="sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt"
          crossorigin="anonymous">

    <link rel="stylesheet" href="~/Content/Site.css" />

    <link rel="manifest" href="/manifest.json">

    <meta name="theme-color" content="#2196f3" />

    <script src="~/Scripts/jquery-3.5.1.min.js"></script>
    <script src="~/Scripts/umd/popper.min.js"></script>

    <script type="module">
            import 'https://cdn.jsdelivr.net/npm/@@pwabuilder/pwaupdate';
            const el = document.createElement('pwa-update');
            document.body.appendChild(el);
    </script>

    <script type="text/javascript">
        var sdkInstance = "appInsightsSDK"; window[sdkInstance] = "appInsights"; var aiName = window[sdkInstance], aisdk = window[aiName] || function (e) { function n(e) { t[e] = function () { var n = arguments; t.queue.push(function () { t[e].apply(t, n) }) } } var t = { config: e }; t.initialize = !0; var i = document, a = window; setTimeout(function () { var n = i.createElement("script"); n.src = e.url || "https://az416426.vo.msecnd.net/scripts/b/ai.2.min.js", i.getElementsByTagName("script")[0].parentNode.appendChild(n) }); try { t.cookie = i.cookie } catch (e) { } t.queue = [], t.version = 2; for (var r = ["Event", "PageView", "Exception", "Trace", "DependencyData", "Metric", "PageViewPerformance"]; r.length;)n("track" + r.pop()); n("startTrackPage"), n("stopTrackPage"); var s = "Track" + r[0]; if (n("start" + s), n("stop" + s), n("addTelemetryInitializer"), n("setAuthenticatedUserContext"), n("clearAuthenticatedUserContext"), n("flush"), t.SeverityLevel = { Verbose: 0, Information: 1, Warning: 2, Error: 3, Critical: 4 }, !(!0 === e.disableExceptionTracking || e.extensionConfig && e.extensionConfig.ApplicationInsightsAnalytics && !0 === e.extensionConfig.ApplicationInsightsAnalytics.disableExceptionTracking)) { n("_" + (r = "onerror")); var o = a[r]; a[r] = function (e, n, i, a, s) { var c = o && o(e, n, i, a, s); return !0 !== c && t["_" + r]({ message: e, url: n, lineNumber: i, columnNumber: a, error: s }), c }, e.autoExceptionInstrumented = !0 } return t }(
            {
                instrumentationKey: "d3883943-ec8d-4937-bbe4-9c9ef46653c5"
            }
        ); window[aiName] = aisdk, aisdk.queue && 0 === aisdk.queue.length && aisdk.trackPageView({});
    </script>
</head>

<body>
    <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
        <div class="container">

            @if (User.IsInRole("AdvancedUser"))
            {
                @Html.ActionLink("Modern Workplace Concierge", "Index", "Home", new { area = "" }, new { @class = "navbar-brand btn btn-outline-warning" })
            }
            else
            {
                @Html.ActionLink("Modern Workplace Concierge", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            }

            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse"
                    aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        @Html.ActionLink("Home", "Index", "Home", new { area = "" },
                            new { @class = ViewBag.Current == "Home" ? "nav-link active" : "nav-link" })
                    </li>
                    <li class="nav-item dropdown">
                        <a class="dropdown-toggle @((ViewBag.Current.StartsWith("Intune") ? "nav-link active" : "nav-link"))" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Intune</a>
                        <div class="dropdown-menu dropdown-menu-right">
                            @Html.ActionLink("Export", "Index", "Intune", new { area = "" },
                            new { @class = ViewBag.Current == "IntuneExport" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Import", "Import", "Intune", new { area = "" },
                           new { @class = ViewBag.Current == "IntuneImport" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("PowerShell Scripts", "DeviceManagementScripts", "Intune", new { area = "" },
                            new { @class = ViewBag.Current == "IntuneDeviceManagementScripts" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Win32 App Detection Scripts", "Win32AppDetectionScripts", "Intune", new { area = "" },
                            new { @class = ViewBag.Current == "IntuneWin32AppDetectionScripts" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Offline Autopilot Profiles", "Index", "AutoPilotConfiguration", new { area = "" },
                           new { @class = ViewBag.Current == "IntuneAutoPilotConfiguration" ? "dropdown-item active" : "dropdown-item" })
                        </div>
                    </li>

                    <li class="nav-item dropdown">
                        <a class="dropdown-toggle @((ViewBag.Current.StartsWith("ConditionalAccess")  ? "nav-link active" : "nav-link"))" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">ConditionalAccess</a>
                        <div class="dropdown-menu dropdown-menu-right">
                            @Html.ActionLink("Baseline Policies", "DeployBaseline", "ConditionalAccess", new { area = "" },
                            new { @class = ViewBag.Current == "ConditionalAccessDeployBasline" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Documentation", "Documentation", "ConditionalAccess", new { area = "" },
                            new { @class = ViewBag.Current == "ConditionalAccessDocumentation" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Export", "Index", "ConditionalAccess", new { area = "" },
                            new { @class = ViewBag.Current == "ConditionalAccessExport" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Import", "Import", "ConditionalAccess", new { area = "" },
                           new { @class = ViewBag.Current == "ConditionalAccessImport" ? "dropdown-item active" : "dropdown-item" })

                            @Html.ActionLink("Test MFA for All Users", "TestMFAForAllUsers", "ConditionalAccess", new { area = "" },
                           new { @class = ViewBag.Current == "ConditionalAccessTestMFAForAllUsers" ? "dropdown-item active" : "dropdown-item" })
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="dropdown-toggle @((ViewBag.Current.StartsWith("About") ? "nav-link active" : "nav-link"))" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">About</a>
                        <div class="dropdown-menu dropdown-menu-right">
                            @Html.ActionLink("Info", "Index", "About", new { area = "" },
                            new { @class = ViewBag.Current == "AboutIndex" ? "dropdown-item active" : "dropdown-item" })
                            @Html.ActionLink("Terms & Conditions", "Terms", "About", new { area = "" },
                            new { @class = ViewBag.Current == "AboutTerms" ? "dropdown-item active" : "dropdown-item" })

                        </div>
                    </li>
                </ul>
                <ul class="navbar-nav justify-content-end">
                    <li class="nav-item">
                        <a href="https://github.com/nicolonsky/ModernWorkplaceConcierge/wiki" target="_blank" class="nav-link">
                            <i class="fas fa-book"></i>
                            <span>Documentation</span>
                        </a>
                    </li>
                    @if (Request.IsAuthenticated)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                                @if (!string.IsNullOrEmpty(ViewBag.User.Avatar))
                                {
                                    <img src="@ViewBag.User.Avatar" class="rounded-circle align-self-center mr-2" style="width: 24px;">
                                }
                                else
                                {
                                    <i class="far fa-user-circle fa-lg rounded-circle align-self-center mr-2" style="width: 32px;"></i>
                                }
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <h5 class="dropdown-item-text mb-0">@ViewBag.User.DisplayName</h5>
                                <p class="dropdown-item-text text-muted mb-0">@ViewBag.User.Email</p>
                                <p class="dropdown-item-text text-muted mb-0"><code class="text-black-50">@ViewBag.User.TenantID</code></p>
                                @if (User.IsInRole("AdvancedUser"))
                                {
                                    <div class="dropdown-divider"></div>
                                    @Html.ActionLink("Advanced", "Index", "Advanced", new { area = "" }, new { @class = "dropdown-item" })
                                }
                                <div class="dropdown-divider"></div>
                                @Html.ActionLink("Sign Out", "SignOut", "Account", new { area = "" }, new { @class = "dropdown-item" })
                            </div>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            @Html.ActionLink("Sign In", "SignIn", "Account", new { area = "" }, new { @class = "nav-link" })
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    <main role="main" class="container overflow-auto">

        @RenderBody()

        @foreach (var alert in alerts)
        {
            <div class="alert alert-danger alert-dismissible" role="alert">
                <p class="mb-3">@alert.Message</p>
                @if (!string.IsNullOrEmpty(alert.Debug))
                {
                    <pre class="alert-pre border bg-light p-2"><code>@alert.Debug</code></pre>
                }
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div id="signalRLiveMessages" aria-hidden="true" style="display: none">
            <div class="card mb-lg-5">
                <div class="card-header bg-white" id="headingOne">
                    <h5 class="mb-0">
                        <button class="btn collapsed" data-toggle="collapse" data-target="#liveMessages" aria-expanded="false" aria-controls="collapseOne">
                            Notifications <span class="badge badge-success" id="notificationCount">1</span>
                        </button>

                        <a id="downloadLogs" href="" class="align-middle float-right" download="ModernWorkplaceConcierge.log">
                            <i class="fa fa-download" aria-hidden="true"></i>
                        </a>
                    </h5>

                </div>
                <div id="liveMessages" class="collapse hide" aria-labelledby="headingOne" data-parent="#signalRLiveMessages">
                    <div class="card-body">
                        <ul class="list-group list-group-flush" id="messages"> </ul>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <br />
    <br />
    <br />
    <div class="container">

        @if (Request.IsAuthenticated)
        {
            <img src="/Content/Images/concierge.svg" class="fixed-bottom float-md-right" style="width: 10%;margin: 1.5em;" data-html="true" data-toggle="tooltip" id="tenant" data-placement="right" title="Hi @ViewBag.User.DisplayName (@ViewBag.User.Email)<br />
            Tenant: <small>@ViewBag.User.TenantID</small> <br />
            Find more information about me on <a href='https://github.com/nicolonsky/ModernWorkplaceConcierge/wiki'>GitHub</a>. <br>
            Cheers,  your Modern Workplace Concierge">
        }
        else
        {
            <img src="/Content/Images/concierge.svg" class="fixed-bottom float-md-right" style="width: 10%;margin: 1.5em;" data-html="true" data-toggle="tooltip" id="tenant" data-placement="right" title="Hi, <a href='/Account/SignIn'>sign-in</a> with your Microsoft Work account to get started.<br />
            Find more information about me on <a href='https://github.com/nicolonsky/ModernWorkplaceConcierge/wiki'>GitHub</a>. <br>
            Cheers,  your Modern Workplace Concierge">
        }


    </div>

    <footer class="footer mt-auto fixed-bottom py-2">
        <div class="container">
            <span class="badge badge-secondary">@System.Configuration.ConfigurationManager.AppSettings["InstanceType"].ToString()</span>
            <span class="float-md-right text-nowrap">Presented by <a href="https://tech.nicolonsky.ch" target="_blank">Chrls.tjokro</a></span>
        </div>
    </footer>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script>
        $(function () {
            $('#tenant').tooltip()
        })
        // log download
        $('#downloadLogs').click(function () {
            var logs = "";
            $('#messages li').each(function (index, obj) {
                var line = $(this).text()
                var output = line + "\n"
                logs += output;
            });
            this.href = "data:text/plain;charset=UTF-8," + logs;
        });
    </script>
</body>
</html>